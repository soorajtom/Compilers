%%
%eop EOF
%verbose
%pure
%name Expr
(* The terminals or tokens of the language *)
%term CONST of int
    | PLUS
    | MINUS
    | MUL
    | EOF
    | NEWLINE

(* The nonterminals of the language *)
%nonterm EXP     of Ast.Expr
       | EXPS    of Ast.Expr list
       | PROGRAM of Ast.Expr list

%left PLUS MINUS
%left MUL
(* The type that captures position in the input *)
%pos int
%%
PROGRAM : EXPS                 ( EXPS )
	| EXPS NEWLINE         ( EXPS )
EXPS    : EXP NEWLINE EXPS     ( EXP :: EXPS         )
	|                      ( []                  )
EXP     : CONST                ( Ast.Const CONST     )
        | EXP PLUS EXP         ( Ast.plus  EXP1 EXP2 )
	| EXP MINUS EXP        ( Ast.minus EXP1 EXP2 )
	| EXP MUL   EXP        ( Ast.mul   EXP1 EXP2 )
